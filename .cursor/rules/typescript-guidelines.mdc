---
globs: *.ts,*.tsx
---
### TypeScript 开发规范（前后端通用）

- 命名与可读性：
  - 函数名用动词/短语，变量名用名词/短语；避免 1–2 字母缩写。
  - 明确含义的命名优先于注释；复杂条件提取为具名变量。

- 类型与接口：
  - 导出的函数/类显式标注类型；避免 `any` 与不安全断言。
  - 后端使用 DTO + Zod/类验证器进行入参校验；前端使用类型安全的 API 封装。

- 控制流与错误：
  - 使用早返回处理边界；避免深层嵌套。
  - 捕获并包装外部调用错误（SSH/HTTP/DB），返回可调试的错误上下文。

- 格式与风格：
  - 与现有 Lint/Prettier 保持一致；长行换行，避免一行多职责。
  - 避免内联复杂三元表达式；多行更可读。

- 后端（NestJS）约定：
  - 分层：Controller（IO 边界）→ Service（业务）→ Repository（数据访问）。
  - 任务编排：BullMQ 队列与并发参数显式配置；任务必须可重入、可超时、可重试。
  - SSH：统一封装执行器（并发、超时、回显流、退出码），禁止在业务层直写命令串。
  - 配置：通过集中 Config 模块提供并校验（并发阈值、超时、保留期、计划任务）。

- 前端（Next.js）约定：
  - 数据获取统一使用 React Query；与 WebSocket 结合实现任务流式输出。
  - 组件拆分：容器组件（数据/状态）与展示组件（UI）分离；表单/查询参数类型化。

